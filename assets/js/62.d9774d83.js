(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{454:function(t,e,a){"use strict";a.r(e);var r=a(5),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"troubleshooting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#troubleshooting"}},[t._v("#")]),t._v(" Troubleshooting")]),t._v(" "),a("p",[t._v("Here are some common problems that you may run into when running a validator node.")]),t._v(" "),a("h2",{attrs:{id:"validator-has-0-voting-power"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validator-has-0-voting-power"}},[t._v("#")]),t._v(" Validator has 0 voting power")]),t._v(" "),a("p",[t._v("Your validator has become auto-unbonded. In mainnet, we unbond validators if they do not vote on "),a("code",[t._v("9500")]),t._v(" of the last "),a("code",[t._v("10000")]),t._v(" blocks ("),a("code",[t._v("50")]),t._v(" of the last "),a("code",[t._v("100")]),t._v(" blocks in testnet). Since blocks are proposed every ~5 seconds, a validator unresponsive for ~13 hours (~4 minutes in testnet) will become unbonded. This usually happens when your "),a("code",[t._v("terrad")]),t._v(" process crashes.")]),t._v(" "),a("p",[t._v("Here's how you can return the voting power back to your validator. First, if "),a("code",[t._v("terrad")]),t._v(" is not running, start it up again:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terrad start\n")])])]),a("p",[t._v("Wait for your full node to catch up to the latest block. Next, run the following command. Note that "),a("code",[t._v("<terra>")]),t._v(" is the address of your validator account, and "),a("code",[t._v("<name>")]),t._v(" is the name of the validator account. You can find this info by running "),a("code",[t._v("terracli keys list")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terracli tx slashing unjail "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("terra"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --chain-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("chain_id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --from"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("from"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("If you don't wait for "),a("code",[t._v("terrad")]),t._v(" to sync before running "),a("code",[t._v("unjail")]),t._v(", you will receive an error message telling you your validator is still jailed.")])]),t._v(" "),a("p",[t._v("Lastly, check your validator again to see if your voting power is back.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("terracli status\n")])])]),a("p",[t._v("You may notice that your voting power is less than it used to be. That's because you got slashed for downtime!")]),t._v(" "),a("h2",{attrs:{id:"terrad-crashes-from-too-many-open-files"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#terrad-crashes-from-too-many-open-files"}},[t._v("#")]),t._v(' terrad crashes from "too many open files"')]),t._v(" "),a("p",[t._v("The default number of files Linux can open (per-process) is "),a("code",[t._v("1024")]),t._v(". "),a("code",[t._v("terrad")]),t._v(" is known to open more than "),a("code",[t._v("1024")]),t._v(" files. This causes the process to crash. A quick fix is to run "),a("code",[t._v("ulimit -n 4096")]),t._v(" (increase the number of open files allowed) and then restart the process with "),a("code",[t._v("terrad start")]),t._v(". If you are using "),a("code",[t._v("systemd")]),t._v(" or another process manager to launch "),a("code",[t._v("terrad")]),t._v(" this may require some configuration at that level. A sample "),a("code",[t._v("systemd")]),t._v(" file to fix this issue is below:")]),t._v(" "),a("div",{staticClass:"language-systemd extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# /etc/systemd/system/terrad.service\n[Unit]\nDescription=Terra Columbus Node\nAfter=network.target\n\n[Service]\nType=simple\nUser=ubuntu\nWorkingDirectory=/home/ubuntu\nExecStart=/home/ubuntu/go/bin/terrad start\nRestart=on-failure\nRestartSec=3\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\n")])])]),a("h2",{attrs:{id:"oracle-voting-error"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oracle-voting-error"}},[t._v("#")]),t._v(" Oracle voting error")]),t._v(" "),a("p",[t._v("Error message encountered by the "),a("a",{attrs:{href:"https://github.com/terra-money/oracle-feeder",target:"_blank",rel:"noopener noreferrer"}},[t._v("Terra Oracle feeder"),a("OutboundLink")],1),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("broadcast error: code: 3, raw_log: validator does not exist: terravaloperxxx\n")])])]),a("p",[t._v("This message can occur for a variety of reasons.")]),t._v(" "),a("h3",{attrs:{id:"_1-the-validator-is-not-active"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-the-validator-is-not-active"}},[t._v("#")]),t._v(" 1. The validator is not active")]),t._v(" "),a("p",[t._v("There are a few reasons why a validator is not active.")]),t._v(" "),a("p",[t._v("For one, it could be jailed. The resolution is unjail the validator.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("terracli tx slashing unjail <terra> --chain-id=<chain_id> --from=<from>\n")])])]),a("p",[t._v("Another reason that the validator is inactive could be due to the validator not being in the active validator set. At the moment of writing the "),a("a",{attrs:{href:"https://docs.terra.money/validators.html#delegations",target:"_blank",rel:"noopener noreferrer"}},[t._v("maximum number of validators is 130"),a("OutboundLink")],1),t._v(". If the number of validators is more than 130, only the top 130 will be active in order of voting power.")]),t._v(" "),a("p",[t._v("To get to the list of the top 130, the resolution is to increase the voting power to the top 130.")]),t._v(" "),a("h3",{attrs:{id:"_2-wrong-network"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-wrong-network"}},[t._v("#")]),t._v(" 2. Wrong network")]),t._v(" "),a("p",[t._v("More often than not though, the Oracle Feeder may be submitting to the wrong network. The command to run the feeder needs to specify the lite client daemon (LCD):")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("nom start vote --"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --source http://localhost:8532/latest "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --lcd "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${LCD}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --chain-id "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${CHAIN_ID}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --validator "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${VALIDATOR_KEY}")]),t._v('"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v('\n  --password "'),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${PASSWORD}")]),t._v("‚Äù "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n")])])]),a("p",[t._v("The LCD that the voter is connecting to may be running for a different network from your node. The remote LCD for the different networks are:")]),t._v(" "),a("ul",[a("li",[t._v("https://lcd.terra.dev for columbus mainnet")]),t._v(" "),a("li",[t._v("https://tequila-lcd.terra.dev for tequila testnet")]),t._v(" "),a("li",[t._v("https://bombay-lcd.terra.dev for bombay testnet")])]),t._v(" "),a("p",[t._v("Be sure to specify the LCD for the same network that your node is connecting to.")]),t._v(" "),a("p",[t._v("If you run a "),a("a",{attrs:{href:"https://docs.terra.money/terracli/lcd.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("local LCD"),a("OutboundLink")],1),t._v(" (i.e. localhost:1317), be sure that your LCD is connecting to the same node.")])])}),[],!1,null,null,null);e.default=o.exports}}]);