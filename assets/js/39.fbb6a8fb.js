(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{430:function(e,t,s){"use strict";s.r(t);var a=s(5),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"node-configuration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-configuration"}},[e._v("#")]),e._v(" Node Configuration")]),e._v(" "),s("p",[e._v("This is a short guide on the most important settings for setting up your node. The configuration files mentioned are located in the "),s("code",[e._v("~/.terra/config/")]),e._v(" directory, and will contain many more items not addressed here. However, as those files are well-documented in the comments preceding configuration lines, please consult those files.")]),e._v(" "),s("h2",{attrs:{id:"general-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#general-settings"}},[e._v("#")]),e._v(" General Settings")]),e._v(" "),s("h3",{attrs:{id:"moniker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#moniker"}},[e._v("#")]),e._v(" Moniker")]),e._v(" "),s("p",[s("code",[e._v("config.toml")])]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A custom human readable name for this node")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("moniker")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cx-mbp-will.local"')]),e._v("\n")])])]),s("h3",{attrs:{id:"minimum-gas-prices"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#minimum-gas-prices"}},[e._v("#")]),e._v(" Minimum Gas Prices")]),e._v(" "),s("p",[s("code",[e._v("app.toml")])]),e._v(" "),s("p",[e._v("You set this parameter as a measure against spam.")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The minimum gas prices a validator is willing to accept for processing a")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# transaction. A transaction's fees must meet the minimum of any denomination")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# specified in this config (e.g. 0.25token1;0.0001token2).")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("minimum-gas-prices")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.01133uluna,0.15uusd,0.104938usdr,169.77ukrw,428.571umnt,0.125ueur,0.98ucny,16.37ujpy,0.11ugbp,10.88uinr,0.19ucad,0.14uchf,0.19uaud,0.2usgd,4.62uthb,1.25usek,1.25unok,0.9udkk,2180.0uidr,7.6uphp"')]),e._v("\n")])])]),s("h3",{attrs:{id:"rest-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rest-api"}},[e._v("#")]),e._v(" REST API")]),e._v(" "),s("p",[s("code",[e._v("app.toml")])]),e._v(" "),s("p",[e._v("Rest API is a set of guidelines for internet data transfer that allows lightweight, scalable integrations. Rest API allows you to perform standard database functions, CRUD, using rest architecture.")]),e._v(" "),s("h3",{attrs:{id:"rosetta-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rosetta-api"}},[e._v("#")]),e._v(" Rosetta API")]),e._v(" "),s("p",[s("code",[e._v("app.toml")])]),e._v(" "),s("p",[e._v("Terra uses Rosetta API to integrate with Coinbase. Rosetta is an open source API that organizes blockchain data into a standardized format, making it easy for developers to build cross-chain applications. Instead of creating specific code for each chain, Rosetta allows different blockchains to integrate into any exchange that uses Rosetta API.")]),e._v(" "),s("p",[e._v("For more information, checkout the official "),s("a",{attrs:{href:"https://www.rosetta-api.org/docs/welcome.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rosetta docs"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("h2",{attrs:{id:"p2p-settings"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#p2p-settings"}},[e._v("#")]),e._v(" P2P Settings")]),e._v(" "),s("h3",{attrs:{id:"seed-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seed-mode"}},[e._v("#")]),e._v(" Seed Mode")]),e._v(" "),s("p",[s("code",[e._v("config.toml")])]),e._v(" "),s("p",[e._v("The node operates in seed mode. In seed mode, a node continuously crawls the network for peers, and upon incoming connection shares some peers and disconnects.")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Seed mode, in which node constantly crawls the network and looks for")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# peers. If another node asks it for addresses, it responds and disconnects.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Does not work if the peer-exchange reactor is disabled.")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("seed_mode")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),e._v("\n")])])]),s("h3",{attrs:{id:"seeds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#seeds"}},[e._v("#")]),e._v(" Seeds")]),e._v(" "),s("p",[s("code",[e._v("config.toml")])]),e._v(" "),s("p",[e._v("Dials these seeds when we need more peers. They should return a list of peers and then disconnect. If we already have enough peers in the address book, we may never need to dial them.")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Comma separated list of seed nodes to connect to")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("seeds")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id100000000000000000000000000000000@1.2.3.4:26656,id200000000000000000000000000000000@2.3.4.5:4444"')]),e._v("\n")])])]),s("h3",{attrs:{id:"persistent-peers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#persistent-peers"}},[e._v("#")]),e._v(" Persistent Peers")]),e._v(" "),s("p",[s("code",[e._v("config.toml")])]),e._v(" "),s("p",[e._v("Dial these peers and auto-redial them if the connection fails. These are intended to be trusted persistent peers that can help anchor us in the p2p network. The auto-redial uses exponential backoff and will give up after a day of trying to connect.")]),e._v(" "),s("p",[e._v("But if "),s("code",[e._v("persistent_peers_max_dial_period")]),e._v(" is set greater than zero, pause between each dial to each persistent peer will not exceed "),s("code",[e._v("persistent_peers_max_dial_period")]),e._v(" during exponential backoff and we keep trying again without giving up.")]),e._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Comma separated list of nodes to keep persistent connections to")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("persistent_peers")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id100000000000000000000000000000000@1.2.3.4:26656,id200000000000000000000000000000000@2.3.4.5:26656"')]),e._v("\n")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);